{"version":3,"sources":["components/FeaturedHero/featured-hero.component.tsx","img/book-placeholder.png","components/SingleItem/single-item.component.tsx","components/Pagination/pagination.component.tsx","components/FeaturedItems/featured-items.component.tsx","components/Header/header.component.tsx","pages/HomePage/home-page.pages.tsx","pages/DetailsPage/details-page.pages.tsx","components/App.tsx","mock/index.js","index.tsx"],"names":["FeaturedHero","className","SingleItem","data","to","id","src","BookCover","alt","summary","title","author","name","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","index","onClick","href","FeaturedItems","posts","category","useState","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","categories","onChange","e","target","value","replaceAll","toLowerCase","single","w","def","sm","lg","text","p","length","Header","offset","setOffset","useEffect","window","onscroll","pageYOffset","xmlns","viewBox","fill","d","HomePage","DetailsPage","params","useParams","item","find","post","publishDate","App","setPosts","updatePosts","setUpdatePosts","loading","setLoading","animate","setAnimate","fetch","then","res","json","catch","err","console","log","path","element","newCategory","filter","catCheck","forEach","postCat","setTimeout","createServer","routes","this","namespace","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5df231c.chunk.js","sourcesContent":["import './featured-hero.style.scss';\n\nconst FeaturedHero: React.FC = () => {\n  return (\n    <div className=\"featured-hero\">\n      <div className=\"featured-hero__canvas\"></div>\n      <div className=\"featured-hero__textbox\">\n        <h1 className=\"heading\">Welcome To Our Book Store</h1>\n        <h2 className=\"subheading\">Lorem ipsum dolor sit amet, consectetur adipisc</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default FeaturedHero;\n","export default __webpack_public_path__ + \"static/media/book-placeholder.4d40d697.png\";","import './single-item.style.scss';\nimport BookCover from '../../img/book-placeholder.png';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  data: {\n    id: string;\n    title: string;\n    publishDate: string;\n    author: {\n      name: string;\n      avatar: string;\n    };\n    summary: string;\n    categories: {\n      id: string;\n      name: string;\n    }[];\n  };\n}\n\nconst SingleItem: React.FC<IProps> = ({ data }: IProps) => {\n  return (\n    <div className=\"single-item\">\n      {/* React router dom link to access single page with item id reference */}\n      <Link to={`/${data.id}`}>\n        <div className=\"single-item__content\">\n          <div className=\"single-item__canvas\">\n            <img src={BookCover} alt={data.summary} />\n          </div>\n          <div className=\"single-item__textbox\">\n            <p className=\"title\">{data.title}</p>\n            <p className=\"author\">{data.author.name}</p>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SingleItem;\n","import './pagination.style.scss';\n\ninterface IProps {\n  postsPerPage: number;\n  totalPosts: number;\n  paginate: (number: number) => void;\n}\n\nconst Pagination: React.FC<IProps> = ({ postsPerPage, totalPosts, paginate }: IProps) => {\n  const pageNumbers = [];\n  // Calculations for setting the page numbers\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination__pages\">\n        {pageNumbers.map((number, index) => {\n          return (\n            <li key={number} className=\"page-item\">\n              <a\n                onClick={() => {\n                  paginate(number);\n                }}\n                href=\"#featured-items\"\n                className=\"page-link\"\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import './featured-items.style.scss';\nimport { Col, Row } from 'tailwind-react-ui';\nimport SingleItem from '../SingleItem/single-item.component';\nimport Pagination from '../Pagination/pagination.component';\nimport { useState } from 'react';\n\ninterface IProps {\n  posts: {\n    id: string;\n    title: string;\n    publishDate: string;\n    author: {\n      name: string;\n      avatar: string;\n    };\n    summary: string;\n    categories: {\n      id: string;\n      name: string;\n    }[];\n  }[];\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  category: any;\n}\n\nconst FeaturedItems: React.FC<IProps> = ({ posts, category }: IProps) => {\n  // Pagination logic for setting current page and total posts per page\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(12);\n  // Set the current item stack based on active paginated page\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Set categories\n  const [categories] = useState([\n    'Surveys and Forms',\n    'Digital Marketing',\n    'Platform News and Updates',\n    'Tips and Best Practise',\n    'Data Management',\n    'Marketing Analytics',\n    'Landing Pages',\n    'Ecommerce',\n    'Marketing Automation',\n    'Email Marketing',\n  ]);\n\n  return (\n    <div className=\"featured-items\" id=\"featured-items\">\n      <div className=\"featured-items__nav\">\n        <div className=\"box\">Category:</div>\n        {/* Grab the target and pass it to the category handler function */}\n        <select\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n            category(e.target.value);\n            setCurrentPage(1);\n          }}\n        >\n          {/* Loop through the categories and display them as options in the select field */}\n          {categories.map((category, index) => (\n            <option key={index} value={category.replaceAll(' ', '-').toLowerCase()}>\n              {category}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"featured-items__grid\">\n        {/* Tailwind UI grid components for listing view */}\n        <Row>\n          {currentPosts.map((single, index) => {\n            return (\n              <Col key={index} w={{ def: 'full', sm: '1/2', lg: '1/4' }} text=\"center\" p=\"2\">\n                <SingleItem data={single} />\n              </Col>\n            );\n          })}\n        </Row>\n        {/* Set the pagination component */}\n        <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={posts.length}\n          paginate={(number) => setCurrentPage(number)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FeaturedItems;\n","import './header.style.scss';\nimport { useState, useEffect } from 'react';\n\nconst Header: React.FC = () => {\n  // set and offset value for header scroll animation\n  const [offset, setOffset] = useState(0);\n\n  // grab the offset value and store in state so it can be used for setting the active class\n  useEffect(() => {\n    window.onscroll = () => {\n      setOffset(window.pageYOffset);\n    };\n  }, []);\n\n  return (\n    <header className={`header ${offset && 'active'}`}>\n      <div className=\"header__logo\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          className=\"feather feather-book-open\"\n        >\n          <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\n          <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\n        </svg>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import FeaturedHero from '../../components/FeaturedHero/featured-hero.component';\nimport FeaturedItems from '../../components/FeaturedItems/featured-items.component';\nimport Header from '../../components/Header/header.component';\nimport './home-page.style.scss';\n\ninterface IProps {\n  posts: {\n    id: string;\n    title: string;\n    publishDate: string;\n    author: {\n      name: string;\n      avatar: string;\n    };\n    summary: string;\n    categories: {\n      id: string;\n      name: string;\n    }[];\n  }[];\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  category: any;\n}\n\nconst HomePage: React.FC<IProps> = ({ posts, category }: IProps) => {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <FeaturedHero />\n      <FeaturedItems posts={posts} category={category} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import './details-page.style.scss';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  posts: {\n    id: string;\n    title: string;\n    publishDate: string;\n    author: {\n      name: string;\n      avatar: string;\n    };\n    summary: string;\n    categories: {\n      id: string;\n      name: string;\n    }[];\n  }[];\n}\n\nconst DetailsPage: React.FC<IProps> = ({ posts }: IProps) => {\n  // get the parameters from the url\n  const params = useParams();\n  // filter the post to find the featured item\n  const item = posts.find((post) => post.id === params.id);\n  // Conditionally set featured item details\n  return (\n    <div className=\"details-page\">\n      <ul>\n        <li>\n          <Link to=\"/\">&#171; Go Back</Link>\n        </li>\n        <li>\n          <span>ID: </span>\n          {item ? item.id : null}\n        </li>\n        <li>\n          <span>Title: </span>\n          {item ? item.title : null}\n        </li>\n        <li>\n          <span>Author: </span>\n          {item ? item.author.name : null}\n        </li>\n        <li>\n          <span>Publish Date: </span>\n          {item ? item.publishDate : null}\n        </li>\n        <li>\n          <span>Summary: </span>\n          {item ? item.summary : null}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default DetailsPage;\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport HomePage from '../pages/HomePage/home-page.pages';\nimport DetailsPage from '../pages/DetailsPage/details-page.pages';\nimport { Routes, Route } from 'react-router-dom';\n\n// Declare all property types to be used\ninterface IPosts {\n  posts: {\n    id: string;\n    title: string;\n    publishDate: string;\n    author: {\n      name: string;\n      avatar: string;\n    };\n    summary: string;\n    categories: {\n      id: string;\n      name: string;\n    }[];\n  }[];\n}\n\nconst App: React.FC = () => {\n  // Assign IPost values to posts state\n  const [posts, setPosts] = useState<IPosts['posts']>([]);\n  // Set new variable totalPosts to posts from API call\n  let totalPosts = posts;\n  // state to update the posts\n  const [updatePosts, setUpdatePosts] = useState(totalPosts);\n  // true false values for loading & animation states\n  const [loading, setLoading] = useState(true);\n  const [animate, setAnimate] = useState(false);\n\n  // Category filter to display posts by selected category\n  const filteredPostsHandler = (newCategory: string) => {\n    // modify total posts to only display the filtered posts\n    totalPosts = totalPosts.filter((single) => {\n      // set the category checker\n      let catCheck = false;\n      // loop through categories and when one is found to be a match, set the category checker to true\n      single.categories.forEach((postCat) => {\n        const category = postCat.name.replaceAll(' ', '-').toLowerCase();\n        if (category === newCategory) {\n          catCheck = true;\n        }\n      });\n      return catCheck;\n    });\n\n    // Fire animation\n    setAnimate(true);\n\n    // After animation, set the updated posts\n    setTimeout(() => {\n      setAnimate(false);\n      setUpdatePosts(totalPosts);\n    }, 500);\n  };\n\n  // Get data from API\n  useEffect(() => {\n    fetch('/api/posts')\n      .then((res) => res.json())\n      .then((json) => {\n        // When data returned, set the state for posts and updated posts\n        setUpdatePosts(json.posts);\n        setPosts(json.posts);\n        // Set loading flag ensuring components are only loaded in if state is false\n        setLoading(false);\n      })\n      // catch error if no response from API\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    // Set up routing and pass through props\n    <div className={`App ${animate ? 'animate' : ''}`}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={!loading && <HomePage posts={updatePosts} category={filteredPostsHandler} />}\n        />\n        <Route path=\"/:id\" element={!loading && <DetailsPage posts={updatePosts} />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import { createServer } from 'miragejs';\n\nimport data from './data.json';\n\ncreateServer({\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/posts', () => {\n      return data;\n    });\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './mock';\nimport './styles/index.css';\n\n/**\n * This file can be ignored, please work in ./components/App.tsx\n */\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}